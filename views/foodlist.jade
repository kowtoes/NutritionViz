extends layout

block content

    h1.
      Food List
    div#main
      form#formFilter(name="form-filter", method="get", action="/foodlist/search")
        div(data-role='fieldcontain')
          fieldset(data-role='controlgroup')
            label(for='Refine Search') Search by Food Name
               input(id='foodFilter', class = 'ui-widget', type='text',value='',placeholder='query',name='filter')
            div(data-role='fieldcontain')
               input(type='submit',value='filter',data-transition='fade', data-theme='c')
      div#tree
    
    script(src="http://d3js.org/d3.v3.min.js")
    script(src="/scripts/jquery-2.1.3.js")
    script(src="/scripts/jquery-ui.js")
    script(src="/scripts/jquery.cookie.js")
    script(src="/scripts/jstree.min.js")
    script.
      //get json from jade
      var foodList = [#{foodlist}];
      var foodNames = [];
      //number based categorys from json, besides NDB_No, 27 entries
      var yAxisLabels = ["Water","Kcal", "Protein", "Tot_Fat", "Carbs", "Fiber", "Ash",
      "Calcium", "Phos", "Iron", "Sodium", "Potas", "Magnes", "Zinc", "Copper", "Vit_A", "Vit_E",
      "Thiamin", "Ribofl", "Niacin", "Vit_C", "FA_Sat","FA_Mono","FA_Poly", "Choles", "GmWt_1", "Refuse%"];
      // 28 entries total
      var yvalues = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
      var majorGroups = ["Dairy and Egg", "Fruit, Nut and Vegetable", "Processed Foods", "Fats and Oils",
                         "Meat and Fish", "Soups, Sauces, and Gravies", "Starches", "Beverages"]
      var subGroups = ["Dairy and Egg Products", "Spices and Herbs", "Baby Foods", "Fats and Oils",
            "Poultry Products", "Soups, Sauces, and Gravies", "Sausages and Luncheon Meats",
            "Breakfast Cereals", "Fruits and Fruit Juices", "Pork Products", "Vegetables and Vegetable Products",
            "Nut and Seed Products", "Beef Products", "Beverages", "Finfish and Shellfish Products",
            "Legumes and Legume Products", "Lamb, Veal, and Game Products", "Baked Products", "Snacks and Sweets",
            "Cereal Grains and Pasta", "Fast Foods", "Meals, Entrees, and Sidedishes"];

      function contains(a, obj) {
        var i = a.length;
        while (i--) {
           if (a[i] === obj) {
               return true;
           }
        }
        return false;
      }






      //iterate through each nutritional food item
      for (item in foodList) {
        var x = 0;
        var y = 0;
        //visit each category of a particular item
        for (property in foodList[JSON.parse(item)]) {
          //only want to iterate over the properties we created that are numbers
          if (foodList[JSON.parse(item)].hasOwnProperty(property) && typeof foodList[item][property] === "number") {
            yvalues[x] += foodList[item][property];
            x++;
          }

        }
        foodNames.push(foodList[item].Short_Desc);
        //reset array index
        x %= 28;
      }
      //compute the average of each category
      var topLevelAverages= [54.26628514056221, 226.58155639223563, 11.631261546184765, 11.024045682730897,
      20.937067938420306, 1.8692039825970563, 1.967626338688084, 69.31775585676036,
      157.94124364123158, 2.667693775100392, 378.637108266399, 289.4174963186078,
      36.30392402945113, 2.0046306894243644, 0.19614457831325344, 751.0974263721553,
      0.7662387884872838, 0.20384605087014906, 0.22751221552877962, 3.000475736278444,
      9.363419344042788, 3.5725011713520805, 4.297347556894269, 2.0274335676037465,
      41.80646084337349, 155.8459002677344, 5.924866131191433]
      var averagesRaw = [];
      for(var y = 0; y < yvalues.length; y++) {
        averagesRaw.push(yvalues[y] / foodList.length);
      }
      //remove NDB_No from array
      averagesRaw = averagesRaw.slice(1);
      var relativeAveragesFullSet = [];
      for(var y = 0; y < averagesRaw.length; y++) {
        relativeAveragesFullSet.push(parseFloat(Math.round(averagesRaw[y] / topLevelAverages[y] * 100) / 100).toFixed(2));
      }

      if($.cookie('prevData')) {
            var oldSet = [];
            for (var x = 0; x < relativeAveragesFullSet.length; x++) {
                oldSet.push($.cookie('prevData').split(',')[x]);
            }
        }

      $(document).ready(function() {
        $("input#foodFilter").autocomplete({
          source: foodNames
        });


        if ($.cookie('currData') !== relativeAveragesFullSet)
            $.cookie('prevData' , $.cookie('currData'));
        $.cookie('currData' , relativeAveragesFullSet);
        $('#tree').jstree({ 'core' : {
          'data' : [
             { "id" : "Dairy and Egg", "parent" : "#", "text" : "Dairy and Egg", 'state' : { 'opened' : true}, "a_attr": {"href":"/foodlist/MajorGroup/Dairy and Egg"} },
             { "id" : "Fruit, Nut and Vegetable", "parent" : "#", "text" : "Fruit, Nut and Vegetable" , 'state' : { 'opened' : true}, "a_attr": {"href":"/foodlist/MajorGroup/Fruit, Nut and Vegetable"} },
             { "id" : "Processed Foods", "parent" : "#", "text" : "Processed Foods" , 'state' : { 'opened' : true}, "a_attr": {"href":"/foodlist/MajorGroup/Processed Foods"} },
             { "id" : "Fats and Oils", "parent" : "#", "text" : "Fats and Oils" , 'state' : { 'opened' : true}, "a_attr": {"href":"/foodlist/MajorGroup/Fats and Oils"}},
             { "id" : "Meat and Fish", "parent" : "#", "text" : "Meat and Fish" , 'state' : { 'opened' : true}, "a_attr": {"href":"/foodlist/MajorGroup/Meat and Fish"}},
             { "id" : "Soups, Sauces, and Gravies", "parent" : "#", "text" : "Soups, Sauces, and Gravies" , 'state' : { 'opened' : true}, "a_attr": {"href":"/foodlist/MajorGroup/Soups, Sauces, and Gravies"}},
             { "id" : "Starches", "parent" : "#", "text" : "Starches", 'state' : { 'opened' : true}, "a_attr": {"href":"/foodlist/MajorGroup/Starches"} },
             { "id" : "Beverages", "parent" : "#", "text" : "Beverages", 'state' : { 'opened' : true}, "a_attr": {"href":"/foodlist/MajorGroup/Beverages"} },

             //subs start here
             { "id" : "Dairy and Egg Products", "parent" : "Dairy and Egg", "text" : "Dairy and Egg Products", "a_attr": {"href":"/foodlist/FdGp_Desc/Dairy and Egg Products"} },
             { "id" : "Spices and Herbs", "parent" : "Fruit, Nut and Vegetable", "text" : "Spices and Herbs", "a_attr": {"href":"/foodlist/FdGp_Desc/Spices and Herbs"} },
             { "id" : "Baby Foods", "parent" : "Processed Foods", "text" : "Baby Foods", "a_attr": {"href":"/foodlist/FdGp_Desc/Baby Foods"} },
             { "id" : "Fats and Oils2", "parent" : "Fats and Oils", "text" : "Fats and Oils", "a_attr": {"href":"/foodlist/FdGp_Desc/Fats and Oils"} },
             { "id" : "Poultry Products", "parent" : "Meat and Fish", "text" : "Poultry Products", "a_attr": {"href":"/foodlist/FdGp_Desc/Poultry Products"} },
             { "id" : "Soups, Sauces, and Gravies2", "parent" : "Soups, Sauces, and Gravies", "text" : "Soups, Sauces, and Gravies", "a_attr": {"href":"/foodlist/FdGp_Desc/Soups, Sauces, and Gravies"} },
             { "id" : "Sausages and Luncheon Meats", "parent" : "Meat and Fish", "text" : "Sausages and Luncheon Meats", "a_attr": {"href":"/foodlist/FdGp_Desc/Sausages and Luncheon Meats"} },
             { "id" : "Breakfast Cereals", "parent" : "Starches", "text" : "Breakfast Cereals", "a_attr": {"href":"/foodlist/FdGp_Desc/Breakfast Cereals"} },
             { "id" : "Fruits and Fruit Juices", "parent" : "Fruit, Nut and Vegetable", "text" : "Fruits and Fruit Juices", "a_attr": {"href":"/foodlist/FdGp_Desc/Fruits and Fruit Juices"} },
             { "id" : "Fruit, Nut and Vegetable2", "parent" : "Fruit, Nut and Vegetable", "text" : "Fruit, Nut and Vegetable", "a_attr": {"href":"/foodlist/FdGp_Desc/Fruit, Nut and Vegetable"} },
             { "id" : "Pork Products", "parent" : "Meat and Fish", "text" : "Pork Products", "a_attr": {"href":"/foodlist/FdGp_Desc/Pork Products"} },
             { "id" : "Vegetables and Vegetable Products", "parent" : "Fruit, Nut and Vegetable", "text" : "Vegetables and Vegetable Products", "a_attr": {"href":"/foodlist/FdGp_Desc/Vegetables and Vegetable Products"} },
             { "id" : "Nut and Seed Products", "parent" : "Fruit, Nut and Vegetable", "text" : "Nut and Seed Products", "a_attr": {"href":"/foodlist/FdGp_Desc/Nut and Seed Products"} },
             { "id" : "Beef Products", "parent" : "Meat and Fish", "text" : "Beef Products", "a_attr": {"href":"/foodlist/FdGp_Desc/Beef Products"} },
             { "id" : "Beverages2", "parent" : "Beverages", "text" : "Beverages", "a_attr": {"href":"/foodlist/FdGp_Desc/Beverages"} },
             { "id" : "Finfish and Shellfish Products", "parent" : "Meat and Fish", "text" : "Finfish and Shellfish Products", "a_attr": {"href":"/foodlist/FdGp_Desc/Finfish and Shellfish Products"} },
             { "id" : "Legumes and Legume Products", "parent" : "Fruit, Nut and Vegetable", "text" : "Legumes and Legume Products", "a_attr": {"href":"/foodlist/FdGp_Desc/Legumes and Legume Products"} },
             { "id" : "Lamb, Veal, and Game Products", "parent" : "Meat and Fish", "text" : "Lamb, Veal, and Game Products", "a_attr": {"href":"/foodlist/FdGp_Desc/Lamb, Veal, and Game Products"} },
             { "id" : "Baked Products", "parent" : "Processed Foods", "text" : "Baked Products", "a_attr": {"href":"/foodlist/FdGp_Desc/Baked Products"} },
             { "id" : "Snacks and Sweets", "parent" : "Processed Foods", "text" : "Snacks and Sweets", "a_attr": {"href":"/foodlist/FdGp_Desc/Snacks and Sweets"} },
             { "id" : "Cereal Grains and Pasta", "parent" : "Starches", "text" : "Cereal Grains and Pasta", "a_attr": {"href":"/foodlist/FdGp_Desc/Cereal Grains and Pasta"} },
             { "id" : "Fast Foods", "parent" : "Processed Foods", "text" : "Fast Foods", "a_attr": {"href":"/foodlist/FdGp_Desc/Fast Foods"} },
             { "id" : "Meals, Entrees, and Sidedishes", "parent" : "Processed Foods", "text" : "Meals, Entrees, and Sidedishes", "a_attr": {"href":"/foodlist/FdGp_Desc/Meals, Entrees, and Sidedishes"} }
          ]
        } }).on("select_node.jstree", function (e, data) {
           document.location = data.instance.get_node(data.node, true).children('a').attr('href');
        });




      });
      var margin = {top: 20, right: 20, bottom: 30, left: 70},
      width = 720 - margin.left - margin.right,
      height = 1000 - margin.top - margin.bottom;

      var x = d3.scale.linear()
          .domain([0, d3.max(relativeAveragesFullSet)])
          .range([0, width]);

      var y = d3.scale.ordinal()
          .domain(yAxisLabels)
          .rangeRoundBands([0, height], .1);

      var xAxis = d3.svg.axis()
          .scale(x)
          .orient("bottom");

      var yAxis = d3.svg.axis()
          .scale(y)
          .orient("left");



      var svg = d3.select("body").append("svg")
          .attr("width", width + margin.left + margin.right)
          .attr("height", height + margin.top + margin.bottom)
        .append("g")
          .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        svg.append("g")
            .attr("class", "x axis")
            .call(xAxis)
            .data(relativeAveragesFullSet)
            .attr("transform", "translate(0 ," + height + ")");


        svg.append("g")
            .attr("class", "y axis")
            .call(yAxis)
            .data(relativeAveragesFullSet);




        var bar = svg.selectAll(".bar")
            .data(relativeAveragesFullSet)
          .enter().append("rect")
            .attr("class", "bar")
            .attr("y", function(d, i) { return i * (height / relativeAveragesFullSet.length); })
            .attr("width", function(d) {return x(d)})
            .attr("height", y.rangeBand())
            .text(function(d) { return d; });
            var text = svg.selectAll(".text")
                .data(relativeAveragesFullSet)
                .enter().append("text")
                    .attr("class", "text")
                    .attr("x", function(d) { return x(d); })
                    .attr("y", function(d, i) { return 16 + i * (height / relativeAveragesFullSet.length); })
                    .attr("dy", ".35em")
                    .text(function(d) { return d; });


        function type(d) {
          d.value = +d.value; // coerce to number
          return d;
        }
