extends layout

block content


    script(src="http://d3js.org/d3.v3.min.js")
    script(src="/scripts/jquery-2.1.3.js")
    script(src="/scripts/jquery-ui.js")
    script(src="/scripts/jquery.cookie.js")
    script(src="/scripts/jstree.min.js")
    script(src="/scripts/sorted.js")
    script.
      //get json from jade
      var foodNames = [];
        //paramInd < param.split(",").length
      for (var paramInd = 0; paramInd < param.split(",").length; paramInd++) {
        //number based categorys from json, besides NDB_No, 27 entries
        var yAxisLabels = ["10%", "30%", "50%", "70%", "90%"];
        // 28 entries total
        var yvalues = [];
        var y2values = [];
        var yMaxes = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
        //iterate through each nutritional food item
        y2values = sortedAttr[paramInd]
        var cumSums = [];
        //change this to vary bar width
        var compressor = 300;
        for(var y = 1; y < y2values.length / compressor; y++) {
          var sum = 0;
          var frac = y * compressor;
          for (var x = (y - 1) * compressor; x < frac; x++) {
            sum += y2values[x]
          }
          cumSums.push(sum / compressor);
        }
        //remove NDB_No from array
        var yAxisLabel = ["Water","Energ_Kcal", "Protein", "Tot_Lipid", "Carbohydrt", "Fiber_TD", "Ash",
        "Calcium", "Phosphorus", "Iron", "Sodium", "Potassium", "Magnesium", "Zinc", "Copper", "Vit_A", "Vit_E",
        "Thiamin", "Riboflavin", "Niacin", "Vit_C", "FA_Sat","FA_Mono","FA_Poly", "Cholestrl", "GmWt_1", "Refuse_Pct"];



        var margin = {top: 20, right: 20, bottom: 30, left: 70},
        width = 300 - margin.left - margin.right,
        height = 180 - margin.top - margin.bottom;


        var x = d3.scale.linear()
            .domain([0, d3.max(cumSums)])
            .range([0, width]);

        var z = d3.scale.linear()
            .domain([0, d3.max(cumSums)])
            .range([0, height]);

        var y = d3.scale.ordinal()
            .domain(yAxisLabels)
            .rangeRoundBands([ height, 0], .1);

        var xAxis = d3.svg.axis()
            .scale(x)
            .orient("bottom");

        var yAxis = d3.svg.axis()
            .scale(y)
            .orient("left");



        var svg = d3.select("body").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
          .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");






          var bar = svg.selectAll(".bar")
              .data(cumSums)
            .enter().append("rect")
              .attr("class", "bar")
              .attr("y", function(d) { return height - z(d) })
              .attr("x", function(d, i) { return (i * (width) / cumSums.length); })
              .attr("width",  (width) / cumSums.length)
              .attr("height", function(d) { return z(d) })
              .text(function(d) { return d; });
              /*var text = svg.selectAll(".text")
                  .data(cumSums)
                  .enter().append("text")
                      .attr("class", "text")
                      .attr("x", function(d) { return x(d); })
                      .attr("y", function(d, i) { return 16 + i * (height) / cumSums.length; })
                      .attr("dy", ".35em")
                      .text(function(d) { return d; }); */



          svg.append("g")
              .attr("class", "y axis")
              .call(xAxis)
              .data(cumSums)
              .attr("transform", "translate(0 ," + height + ")");


          svg.append("g")
              .attr("class", "y axis")
              .call(yAxis)
              .data(cumSums);

          svg.append("text")
              .attr("x", (width / 2))
              .attr("y", 10 - (margin.top / 2))
              .attr("text-anchor", "middle")
              .style("font-size", "16px")
              .style("text-decoration", "underline")
              .text(param.split(",")[paramInd]);

          function type(d) {
            d.value = +d.value; // coerce to number
            return d;
          }
        }
        $(document).ready(function() {
          $("input#foodFilter").autocomplete({
            source: yAxisLabel
          });

          for (var x = 0; x < yAxisLabel.length; x++) {
            $('#cates').append("<li><a href = /category/search?filter=" + yAxisLabel[x] + ">" +  yAxisLabel[x] + " </a></li>");
          }



        });
